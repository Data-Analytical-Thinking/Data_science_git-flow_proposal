# -*- coding: utf-8 -*-
"""Big Five Personality TestClassification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_7GDAGsQeYYDsEHpwQbwsCEBtrBATWmV
"""

!pip install yellowbrick

!pip install missingno

import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os
from io import open
pd.options.display.max_columns = 150
from sklearn.cluster import KMeans
from yellowbrick.cluster import KElbowVisualizer

dataset = pd.read_csv('data-final.csv', sep='\t')

(Linhas,Colunas) = (dataset.shape[0],dataset.shape[1])
(Linhas,Colunas)

dataset.head()

dataset.drop(dataset.columns[50:110], axis=1, inplace=True)

dataset.shape[1]

dataset.head()

pd.options.display.float_format = "{:.2f}".format
dataset.describe()

dataset[(dataset == 0.00).all(axis=1)].describe()

dataset1 = dataset[(dataset > 0.00).all(axis=1)]    #Excluindo valores 0.00

dataset["EXT1"].value_counts()    #Ainda com os valores nulos

dataset1["EXT1"].value_counts()  #Valores nulos retirados

kmeans = KMeans()
visualizer = KElbowVisualizer(kmeans, k=(2,10))

datatest = dataset1.sample(n=5000, random_state=1)

visualizer.fit(datatest)
visualizer.poof()

kmeans = KMeans(n_clusters=5)   #Definido o numero de clusters, passo o valor K como parametro para o KMeans. 
k_fit = kmeans.fit(dataset1)

Oracle = k_fit.labels_
dataset1['Clusters'] = Oracle

dataset1["Clusters"].value_counts()

dataset1.head()

dataset1.groupby('Clusters').mean()

col_list = list(dataset1)
ext = col_list[0:10]
est = col_list[10:20]
agr = col_list[20:30]
csn = col_list[30:40]
opn = col_list[40:50]

df = pd.DataFrame()
df['extroversion'] = dataset1[ext].sum(axis=1)/10
df['neurotic'] = dataset1[est].sum(axis=1)/10
df['agreeable'] = dataset1[agr].sum(axis=1)/10
df['conscientious'] = dataset1[csn].sum(axis=1)/10
df['open'] = dataset1[opn].sum(axis=1)/10
df['clusters'] = Oracle

df.groupby('clusters').mean()

data_clusters = df.groupby('clusters').mean()

plt.figure(figsize=(22,3))
for i in range(0, 5):
    plt.subplot(1,5,i+1)
    plt.bar(data_clusters.columns, data_clusters.iloc[:, i], color='blue', alpha=0.9)
    plt.plot(data_clusters.columns, data_clusters.iloc[:, i], color='red')
    plt.title('Grupo ' + str(i))
    plt.xticks(rotation=45)
    plt.ylim(0,4);